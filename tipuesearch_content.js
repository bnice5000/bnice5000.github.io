var tipuesearch = {"pages":[{"title":"The Sausage","text":"The Engine This site is created using the Pelican static site generation engine written in python . I am currently using the following Pelican plugins: Sitemap Extract Table of Contents Photos Series Neighbor Articles The Theme The theme is a modified version of the pelican-bootstrap3 theme using the Bootswatch United variation. My Setup The articles are written in Markdown . 1 I am using MacDown as my primary markdown editor. I also use to varying degrees MultiMarkdown , Sublime Text , and Byword 2 . The coding and theme were developed using Atom and Sublime Text. 3 The site is register through Hover 4 and hosted on GitHub Pages . This site was developed on a Mac . The site has been tested with Chrome , Safari , and Firefox . I have a Windows box at work I will likely give it a cursory glance to make sure it is not heinous on Edge and IE . The Markdown used is actually a mashup of MultiMarkdown and GitHub Flavored Markdown . Many thanks to Fletcher Penny and the good people at GitHub . ↩ I think I have used ever Markdown editor available for Mac. I will definitely do a post about them in the future. ↩ I started coding this site in Sublime Text. It has been my default programming editor for both work and home since 2012. Atom has gotten a lot of buzz lately, so, I thought I would check it out. It is pretty good. They both have their quirks and I will likely stick with Sublime Text for the immediate future. Though, Atom is a serious challenger. ↩ Disclaimer: I get $2.00 toward my Hover account if you use this link. However, it would not change my opinion about them as a company. They are great and they have made the domain registration process simple. ↩","tags":"pages","url":"https://ninetenlevins.com/pages/sausage.html","loc":"https://ninetenlevins.com/pages/sausage.html"},{"title":"Feature Test 1","text":"Markdown: Syntax Overview Philosophy Markdown is intended to be as easy-to-read and easy-to-write as is feasible. Readability, however, is emphasized above all else. A Markdown-formatted document should be publishable as-is, as plain text, without looking like it's been marked up with tags or formatting instructions. While Markdown's syntax has been influenced by several existing text-to- HTML filters – including Setext , atx , Textile , reStructuredText , Grutatext , and EtText – the single biggest source of inspiration for Markdown's syntax is the format of plain text email. Block Elements Paragraphs and Line Breaks A paragraph is simply one or more consecutive lines of text, separated by one or more blank lines. (A blank line is any line that looks like a blank line – a line containing nothing but spaces or tabs is considered blank.) Normal paragraphs should not be indented with spaces or tabs. The implication of the \"one or more consecutive lines of text\" rule is that Markdown supports \"hard-wrapped\" text paragraphs. This differs significantly from most other text-to- HTML formatters (including Movable Type's \"Convert Line Breaks\" option) which translate every line break character in a paragraph into a <br /> tag. When you do want to insert a <br /> break tag using Markdown, you end a line with two or more spaces, then type return. Headers Markdown supports two styles of headers, [Setext] [1] and [atx] [2]. Optionally, you may \"close\" atx-style headers. This is purely cosmetic – you can use this if you think it looks better. The closing hashes don't even need to match the number of hashes used to open the header. (The number of opening hashes determines the header level.) Blockquotes Markdown uses email-style > characters for blockquoting. If you're familiar with quoting passages of text in an email message, then you know how to create a blockquote in Markdown. It looks best if you hard wrap the text and put a > before every line: This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing. Markdown allows you to be lazy and only put the > before the first line of a hard-wrapped paragraph: This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing. Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by adding additional levels of > : This is the first level of quoting. This is nested blockquote. Back to the first level. Blockquotes can contain other Markdown elements, including headers, lists, and code blocks: This is a header. This is the first list item. This is the second list item. Here's some example code: return shell_exec(\"echo $input | $markdown_script\"); Any decent text editor should make email-style quoting easy. For example, with BBEdit, you can make a selection and choose Increase Quote Level from the Text menu. Lists Markdown supports ordered (numbered) and unordered (bulleted) lists. Unordered lists use asterisks, pluses, and hyphens – interchangably – as list markers: Red Green Blue is equivalent to: Red Green Blue and: Red Green Blue Ordered lists use numbers followed by periods: Bird McHale Parish It's important to note that the actual numbers you use to mark the list have no effect on the HTML output Markdown produces. The HTML Markdown produces from the above list is: If you instead wrote the list in Markdown like this: Bird McHale Parish or even: Bird McHale Parish you'd get the exact same HTML output. The point is, if you want to, you can use ordinal numbers in your ordered Markdown lists, so that the numbers in your source match the numbers in your published HTML . But if you want to be lazy, you don't have to. To make lists look nice, you can wrap items with hanging indents: Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing. But if you want to be lazy, you don't have to: Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing. List items may consist of multiple paragraphs. Each subsequent paragraph in a list item must be indented by either 4 spaces or one tab: This is a list item with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing. It looks nice if you indent every line of the subsequent paragraphs, but here again, Markdown will allow you to be lazy: This is a list item with two paragraphs. This is the second paragraph in the list item. You're only required to indent the first line. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Another item in the same list. To put a blockquote within a list item, the blockquote's > delimiters need to be indented: A list item with a blockquote: This is a blockquote inside a list item. To put a code block within a list item, the code block needs to be indented twice – 8 spaces or two tabs: A list item with a code block: <code goes here> Code Blocks Pre-formatted code blocks are used for writing about programming or markup source code. Rather than forming normal paragraphs, the lines of a code block are interpreted literally. Markdown wraps a code block in both <pre> and <code> tags. To produce a code block in Markdown, simply indent every line of the block by at least 4 spaces or 1 tab. This is a normal paragraph: This is a code block. Here is an example of AppleScript: tell application \"Foo\" beep end tell A code block continues until it reaches a line that is not indented (or the end of the article). Within a code block, ampersands ( & ) and angle brackets ( < and > ) are automatically converted into HTML entities. This makes it very easy to include example HTML source code using Markdown – just paste it and indent it, and Markdown will handle the hassle of encoding the ampersands and angle brackets. For example, this: <div class= \"footer\" > &copy; 2004 Foo Corporation </div> Regular Markdown syntax is not processed within code blocks. E.g., asterisks are just literal asterisks within a code block. This means it's also easy to use Markdown to write about Markdown's own syntax. tell application \"Foo\" beep end tell Span Elements Links Markdown supports two style of links: inline and reference . In both styles, the link text is delimited by [square brackets]. To create an inline link, use a set of regular parentheses immediately after the link text's closing square bracket. Inside the parentheses, put the URL where you want the link to point, along with an optional title for the link, surrounded in quotes. For example: This is an example inline link. This link has no title attribute. Emphasis Markdown treats asterisks ( * ) and underscores ( _ ) as indicators of emphasis. Text wrapped with one * or _ will be wrapped with an HTML <em> tag; double * ‘ s or _ ‘ s will be wrapped with an HTML <strong> tag. E.g., this input: single asterisks single underscores double asterisks double underscores Code To indicate a span of code, wrap it with backtick quotes ( ` ). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example: Use the printf() function. My Tests for Plugins Sausage Better Figures & Images Test IMG Test Figure Test With Caption Figure HTML Test This is a test. Ante iaculum de nulla magna et sola munere quae manu, longe utque; ut curvavit illuc. Candore Phrygiae misereri vaccam: nec mihi , putes eveniet nescius, caede tepentibus Titan , nihil. Est tuo iacentia oneratur tendere gravitate gemellos, iniquae pede quoque fulgentem fecere vicimus manu mearum; exiguo. IMG Test with Attributes Ante iaculum de nulla magna et sola munere quae manu, longe utque; ut curvavit illuc. Candore Phrygiae misereri vaccam: nec mihi , putes eveniet nescius, caede tepentibus Titan , nihil. Est tuo iacentia oneratur tendere gravitate gemellos, iniquae pede quoque fulgentem fecere vicimus manu mearum; exiguo. Rerum dea credunt, tu multifidasque et dixit munus sidere Indis venire virgo bella et sive? Inrupit capreisque, loquor nostroque lacusque iram de obstipuit, Smilace sine. Ante iaculum de nulla magna et sola munere quae manu, longe utque; ut curvavit illuc. Candore Phrygiae misereri vaccam: nec mihi , putes eveniet nescius, caede tepentibus Titan , nihil. Est tuo iacentia oneratur tendere gravitate gemellos, iniquae pede quoque fulgentem fecere vicimus manu mearum; exiguo. Rerum dea credunt, tu multifidasque et dixit munus sidere Indis venire virgo bella et sive? Inrupit capreisque, loquor nostroque lacusque iram de obstipuit, Smilace sine. Ante iaculum de nulla magna et sola munere quae manu, longe utque; ut curvavit illuc. Candore Phrygiae misereri vaccam: nec mihi , putes eveniet nescius, caede tepentibus Titan , nihil. Est tuo iacentia oneratur tendere gravitate gemellos, iniquae pede quoque fulgentem fecere vicimus manu mearum; exiguo. Rerum dea credunt, tu multifidasque et dixit munus sidere Indis venire virgo bella et sive? Inrupit capreisque, loquor nostroque lacusque iram de obstipuit, Smilace sine. Table Test Tables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1 Super Fences Test (Flow) Test st=>start: Start:>http://www.google.com[blank] e=>end:>http://www.google.com op1=>operation: My Operation sub1=>subroutine: My Subroutine cond=>condition: Yes or No?:>http://www.google.com io=>inputoutput: catch something... st->op1->cond cond(yes)->io->e cond(no)->sub1(right)->op1 Super Fences Test ( UML ) Test Title: Here is a title A->B: Normal line B-->C: Dashed line C->>D: Open arrow D-->>A: Dashed open arrow Iacet mensum duxere adludit et ille decipit Iactas caeli illic fodiebant aenea super artus; ritu inque. Toto natam Phlegraeon modo; est Philemon protinus iuvere pondus languentique duro . Herbas putet herbas: tandem nova conplexa; et ultima fecit. Mea rite inimica quotiensque quemque regale esse locuti volucrum triste hoc iaces. wpaDomainHyperlink = browser; if (xmpConstantKeylogger.smishing_storage_bankruptcy(1)) { dotIntegrated.state += dimm; ddr = -4; spam += sidebar; } smtp_margin_print . character_video_internic = simm_responsive + backlink ; if ( hdtvMemory ( responsive_mountain ( cdLifoAlpha ( - 2 , cross , controllerSurgeDesign )), radcab_lion , ircHoneypot )) { column_socket_edutainment = 3 ; compileCss = dtd_system ( captcha ); } Nunc faces utroque, at moenia miles? Remoretur propter; dum decimo, candida nautas. In si Oeneus quibus gener et manus vitibus Stygiam trepidoque nascuntur erat, dea, quamque. Aliquis iacent quodque petens , ambiguis mirum minores iniuria inposuit quae expers caput saepe modo, si non. Mentique fama Thoantis excipit , picea placandam guttura stabat protinus praetincta , teneret de regnat mihi, vel mutua Ossaque. The weak can never forgive. Forgiveness is the attribute of the strong. Ghandi","tags":"Test","url":"https://ninetenlevins.com/posts/2016/05/featuretest1.html","loc":"https://ninetenlevins.com/posts/2016/05/featuretest1.html"},{"title":"America's Test Kitchen's Hummingbird Cake","text":"America's Test Kitchen's Hummingbird Cake Review","tags":"Recipes","url":"https://ninetenlevins.com/posts/2014/03/ATK-Hummingbird-Cake.html","loc":"https://ninetenlevins.com/posts/2014/03/ATK-Hummingbird-Cake.html"}]};